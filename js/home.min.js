const explodingNav = document.querySelector(".exploding-nav"),
  explodingNavButton = document.querySelector(".exploding-nav-button");

function toggleNavOpen(e) {
  e.preventDefault();
  explodingNav.classList.contains("active")
    ? window.playSoundEffect("power-down")
    : window.playSoundEffect("power-up");
  explodingNav.classList.remove("first-run");
  explodingNav.classList.toggle("active");
}

explodingNavButton.addEventListener("click", toggleNavOpen);

const settingsButton = document.querySelector(".site-settings-button"),
  panel = document.querySelector(".site-settings-panel"),
  soundToggle = document.querySelector("[data-setting=sound]"),
  soundImage = soundToggle.querySelector("img");

let isSoundEnabled = window.localStorage.getItem("settings:sound");

function toggleSettings() {
  panel.classList.toggle("site-settings-panel-open");
}

function toggleSound() {
  isSoundEnabled = !isSoundEnabled;
  window.localStorage.setItem("settings:sound", isSoundEnabled);
  if (isSoundEnabled) {
    window.sound.mute(false);
    soundImage.src = soundImage.dataset.imageOn;
  } else {
    window.sound.mute(true);
    soundImage.src = soundImage.dataset.imageOff;
  }
}

settingsButton.addEventListener("click", () => {
  toggleSettings();
});
soundToggle.addEventListener("click", () => {
  toggleSound();
});

const taglines = [
  { size: "8.44vw", "size-lg": "65.5px", text: "has a lot of ideas" },
  { rotation: "11deg", scale: "1.2", size: "8.44vw", "size-lg": "65.5px", text: '<span class="love"></span>s testing business ideas', top: "0" },
  { size: "8.44vw", "size-lg": "65.5px", text: "Invests responsibly... ish" },
  { rotation: "-9deg", scale: "1.15", size: "8.44vw", "size-lg": "65.5px", text: 'Is about 73% organised' },
  { rotation: "18deg", scale: 1.35, size: "8.44vw", "size-lg": "65.5px", text: '<span class="love">love</span>s reading terms & conditions', top: "0.025em" },
  { scale: 1.3, rotation: "-3deg", size: "8.44vw", "size-lg": "65.5px", text: 'I <span class="love">love</span> to research stocks like a weirdo', top: "-0.1em" },
  { rotation: "-11deg", scale: 1.3, size: "8.44vw", "size-lg": "65.5px", text: '<span class="love">love</span>s that VR is cheaper than therapy' },
];

const element = document.querySelector(".hero-tagline");
let currentIndex = 0;

function cycleTagline() {
  window.addBoop();
  currentIndex = (currentIndex + 1) % taglines.length;
  const e = taglines[currentIndex];
  element.style.setProperty("--top", e.top || "-7px");
  element.style.setProperty("--rotation", e.rotation || "0deg");
  element.style.setProperty("--scale", e.scale || 1.1);
  element.style.setProperty("--size", e.size);
  element.style.setProperty("--size-lg", e["size-lg"]);
  element.innerHTML = e.text;
}

const taglineButton = document.querySelector(".hero-cycle");
taglineButton.addEventListener("click", (e) => {
  taglineButton.classList.add("active");
  setTimeout(() => {
    taglineButton.classList.remove("active");
  }, 500);
  cycleTagline();
});

const world = document.querySelector(".boop-drop"),
  { Engine, Render, Runner, World, Bodies } = Matter,
  heroBlock = document.querySelector(".hero-block"),
  { width, height } = heroBlock.getBoundingClientRect();

function createBall() {
  return Bodies.circle(Math.round(Math.random() * width), -30, 25, {
    angle: Math.PI * (2 * Math.random() - 1),
    friction: 0.001,
    frictionAir: 0.01,
    restitution: 0.8,
    render: {
      sprite: {
        texture: "https://static-cdn.jtvnw.net/emoticons/v1/301299185/2.0",
      },
    },
  });
}

const engine = Engine.create(),
  runner = Runner.create(),
  render = Render.create({
    canvas: world,
    engine: engine,
    options: {
      width: width,
      height: height,
      background: "transparent",
      wireframes: false,
    },
  }),
  boundaryOptions = {
    isStatic: true,
    render: { fillStyle: "transparent", strokeStyle: "transparent" },
  },
  ground = Bodies.rectangle(width / 2, height, width + 20, 4, boundaryOptions),
  leftWall = Bodies.rectangle(0, height / 2, 4, height, boundaryOptions),
  rightWall = Bodies.rectangle(width, height / 2, 4, height, boundaryOptions);

Render.run(render);
Runner.run(runner, engine);
World.add(engine.world, [ground, leftWall, rightWall]);

const addBoop = (play = true) => {
  if (play) window.playSoundEffect("boop");
  const ball = createBall();
  World.add(engine.world, [ball]);
};

window.addBoop = addBoop;
addBoop(false);

const bios = document.querySelector("#bios").content.cloneNode(true),
  bioEl = document.querySelector(".bio"),
  options = document.querySelector(".bio-length-options");

options.addEventListener("change", (e) => {
  const selected = bios.querySelector(`[data-length=${e.target.value}]`);
  bioEl.innerHTML = selected.innerHTML;
});

const gallery = document.querySelector(".gallery-image"),
  img = gallery.querySelector("img"),
  caption = gallery.querySelector(".image-caption"),
  creditLink = gallery.querySelector(".gallery-credit a"),
  fullSizeLink = gallery.querySelector(".gallery-fullsize-link");

function updateImage(e) {
  const t = e.target.querySelector("img") || e.target,
    n = t.dataset.publicId,
    o = t.dataset.alt,
    s = `https://res.cloudinary.com/jlengstorf/image/upload/w_800,h_800,c_fill,g_faces,q_auto,f_auto/${n}.jpg`,
    a = `https://res.cloudinary.com/jlengstorf/image/upload/w_400,h_400,c_fill,g_faces,q_auto,f_auto/${n}.jpg 1x, https://res.cloudinary.com/jlengstorf/image/upload/w_800,h_800,c_fill,g_faces,q_auto,f_auto/${n}.jpg 2x`,
    l = `https://res.cloudinary.com/jlengstorf/image/upload/${n}.jpg`;
  img.src = s;
  img.srcset = a;
  img.alt = o;
  caption.innerText = t.dataset.caption;
  creditLink.href = t.dataset.creditLink;
  creditLink.innerText = t.dataset.credit;
  fullSizeLink.href = l;
}

const thumbs = document.querySelector(".gallery-thumbnails");
thumbs.addEventListener("click", updateImage);
thumbs.addEventListener("keydown", (e) => {
  if (e.key === "Enter") updateImage(e);
});

const sound = new Howl({
  src: [
    "https://res.cloudinary.com/jlengstorf/video/upload/q_auto/v1642207423/jason.energy/sfx/sprite.webm",
    "https://res.cloudinary.com/jlengstorf/video/upload/q_auto/v1642207423/jason.energy/sfx/sprite.mp3",
  ],
  sprite: {
    airhorn: [0, 2076],
    beep: [2205, 378],
    boop: [2724, 483],
    click: [3373, 273],
    hooray: [3762, 900],
    oop: [4800, 324],
    pop: [5319, 324],
    "power-down": [5838, 952],
    "power-up": [7005, 953],
    woohoo: [8173, 743],
    yay: [9081, 1265],
  },
});

window.sound = sound;
window.playSoundEffect = (name = "boop") => {
  sound.play(name);
};

const hoverEls = document.querySelectorAll("[data-sound-hover]");
hoverEls.forEach((el) => {
  const soundName = el.dataset.soundHover;
  el.addEventListener("mouseenter", () => window.playSoundEffect(soundName));
});

const clickEls = document.querySelectorAll("[data-sound-click]");
clickEls.forEach((el) => {
  const soundName = el.dataset.soundClick;
  el.addEventListener("mousedown", (e) => {
    window.playSoundEffect(soundName);
    e.preventDefault();
  });
  el.addEventListener("keydown", (e) => {
    if (e.key === "Enter") window.playSoundEffect(soundName);
  });
});

const focusEls = document.querySelectorAll("[data-sound-focus]");
focusEls.forEach((el) => {
  const soundName = el.dataset.soundFocus;
  el.addEventListener("focus", () => window.playSoundEffect(soundName));
});
