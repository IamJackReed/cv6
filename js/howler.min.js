// ---------- Sounds (Howler) ----------
(function initSound() {
  // Bail if Howler isn't present
  if (typeof Howl === "undefined") {
    window.sound = { mute: () => {} };
    window.playSoundEffect = () => {};
    return;
  }

  // Main sprite-based SFX
  const sound = new Howl({
    src: [
      "https://res.cloudinary.com/jlengstorf/video/upload/q_auto/v1642207423/jason.energy/sfx/sprite.webm",
      "https://res.cloudinary.com/jlengstorf/video/upload/q_auto/v1642207423/jason.energy/sfx/sprite.mp3",
    ],
    sprite: {
      airhorn: [0, 2076],
      beep: [2205, 378],
      boop: [2724, 483],
      click: [3373, 273],
      hooray: [3762, 900],
      oop: [4800, 324],
      pop: [5319, 324],
      "power-down": [5838, 952],
      "power-up": [7005, 953],
      woohoo: [8173, 743],
      yay: [9081, 1265],
    },
    onloaderror: (id, err) => console.warn("[sprite] loaderror", id, err),
    onplayerror: (id, err) => {
      console.warn("[sprite] playerror", id, err);
      sound.once("unlock", () => sound.play("boop"));
    }
  });

  // BB-8 clip for the hero-cycle — add MP3 fallback for Safari/iOS
  const bb8 = new Howl({
    src: ["images/bb8.webm", "images/bb8.mp3"], // keep bb8.mp3 if you have it
    volume: 0.6,
    html5: false,
    preload: true,
    onloaderror: (id, err) => console.warn("[bb8] loaderror", id, err, "→ Check images/bb8.* exists."),
    onplayerror: (id, err) => {
      console.warn("[bb8] playerror", id, err);
      bb8.once("unlock", () => bb8.play());
    }
  });

  window.sound = sound;

  // Router: play sprite by name, or bb8 for hero
  window.playSoundEffect = (name = "boop") => {
    if (name === "bb8") {
      bb8.play();
    } else {
      sound.play(name);
    }
  };

  // Apply saved sound state (works even if home.min.js hasn't run yet)
  if (typeof applySoundState === "function") {
    applySoundState();
  } else {
    let enabled = true;
    try {
      const v = localStorage.getItem("settings:sound");
      enabled = v === null ? true : (v === "true");
    } catch {}
    if (window.Howler?.mute) Howler.mute(!enabled);
    if (window.sound?.mute) window.sound.mute(!enabled);
  }
})();
